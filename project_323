import React from 'react';
import { configureStore, createSlice } from '@reduxjs/toolkit';
import { Provider, useSelector, useDispatch } from 'react-redux';
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';

// Redux Slice for Cart
const cartSlice = createSlice({
  name: 'cart',
  initialState: {
    cartItems: [],
  },
  reducers: {
    addToCart: (state, action) => {
      const existingItem = state.cartItems.find(item => item.id === action.payload.id);
      if (existingItem) {
        existingItem.quantity += 1;
      } else {
        state.cartItems.push({ ...action.payload, quantity: 1 });
      }
    },
    removeFromCart: (state, action) => {
      state.cartItems = state.cartItems.filter(item => item.id !== action.payload);
    },
    increaseQuantity: (state, action) => {
      const item = state.cartItems.find(item => item.id === action.payload);
      if (item) item.quantity += 1;
    },
    decreaseQuantity: (state, action) => {
      const item = state.cartItems.find(item => item.id === action.payload);
      if (item) item.quantity -= 1;
      if (item.quantity === 0) {
        state.cartItems = state.cartItems.filter(item => item.id !== action.payload);
      }
    },
  },
});

const { addToCart, removeFromCart, increaseQuantity, decreaseQuantity } = cartSlice.actions;
const cartReducer = cartSlice.reducer;

// Redux Store
const store = configureStore({
  reducer: {
    cart: cartReducer,
  },
});

// Header Component
const Header = () => {
  const cartItems = useSelector(state => state.cart.cartItems);
  const totalItems = cartItems.reduce((total, item) => total + item.quantity, 0);

  return (
    <header>
      <nav>
        <Link to="/">Home</Link>
        <Link to="/products">Products</Link>
        <Link to="/cart">Cart ({totalItems})</Link>
      </nav>
    </header>
  );
};

// Landing Page Component
const LandingPage = () => {
  return (
    <div>
      <h1>GreenLeaf</h1>
      <p>Welcome to GreenLeaf, your one-stop shop for beautiful and healthy houseplants. We offer a wide variety of plants to brighten up your home or office.</p>
      <Link to="/products">
        <button>Get Started</button>
      </Link>
    </div>
  );
};

// Product Listing Page Component
const ProductListingPage = () => {
  const dispatch = useDispatch();

  const products = [
    { id: 1, name: 'Snake Plant', price: 25, category: 'Low Light', image: 'snake-plant.jpg' },
    { id: 2, name: 'Monstera', price: 40, category: 'Air Purifying', image: 'monstera.jpg' },
    { id: 3, name: 'Fiddle Leaf Fig', price: 60, category: 'Statement Plants', image: 'fiddle-leaf-fig.jpg' },
    { id: 4, name: 'Pothos', price: 20, category: 'Low Light', image: 'pothos.jpg' },
    { id: 5, name: 'Aloe Vera', price: 15, category: 'Air Purifying', image: 'aloe-vera.jpg' },
    { id: 6, name: 'ZZ Plant', price: 30, category: 'Low Light', image: 'zz-plant.jpg' },
  ];

  const handleAddToCart = (product) => {
    dispatch(addToCart(product));
  };

  return (
    <div>
      <h2>Products</h2>
      <div>
        {products.map(product => (
          <div key={product.id}>
            <img src={product.image} alt={product.name} />
            <h3>{product.name}</h3>
            <p>${product.price}</p>
            <button onClick={() => handleAddToCart(product)}>Add to Cart</button>
          </div>
        ))}
      </div>
    </div>
  );
};

// Shopping Cart Page Component
const ShoppingCartPage = () => {
  const cartItems = useSelector(state => state.cart.cartItems);
  const dispatch = useDispatch();

  const totalItems = cartItems.reduce((total, item) => total + item.quantity, 0);
  const totalCost = cartItems.reduce((total, item) => total + item.price * item.quantity, 0);

  return (
    <div>
      <h2>Shopping Cart</h2>
      <p>Total Items: {totalItems}</p>
      <p>Total Cost: ${totalCost}</p>
      {cartItems.map(item => (
        <div key={item.id}>
          <img src={item.image} alt={item.name} />
          <h3>{item.name}</h3>
          <p>${item.price}</p>
          <p>Quantity: {item.quantity}</p>
          <button onClick={() => dispatch(increaseQuantity(item.id))}>+</button>
          <button onClick={() => dispatch(decreaseQuantity(item.id))}>-</button>
          <button onClick={() => dispatch(removeFromCart(item.id))}>Delete</button>
        </div>
      ))}
      <button onClick={() => alert('Coming Soon!')}>Checkout</button>
      <Link to="/products">
        <button>Continue Shopping</button>
      </Link>
    </div>
  );
};

// App Component
const App = () => {
  return (
    <Provider store={store}>
      <Router>
        <Header />
        <Routes>
          <Route path="/" element={<LandingPage />} />
          <Route path="/products" element={<ProductListingPage />} />
          <Route path="/cart" element={<ShoppingCartPage />} />
        </Routes>
      </Router>
    </Provider>
  );
};

export default App;
